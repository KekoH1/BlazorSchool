@page "/passwords"
@rendermode InteractiveServer
@using System.Linq

<h3>Password Tester</h3>
<PasswordTester OnStatusChanged ="OnPasswordStatusChanged" />

<input type="password" @bind="Password" @oninput="ValidatePassword" />
<p>@ValidationStatus</p>

@code {
    private string Password { get; set; }
    private string ValidationStatus { get; set; }

    [Parameter]
    public EventCallback<bool> OnStatusChanged { get; set; }

    private void ValidatePassword()
    {
        // Validating password
        bool isValid = IsValidPassword(Password);

        // Update validation status
        ValidationStatus = isValid ? "Valid" : "Invalid";

        // Notify parent component about status change
        OnStatusChanged.InvokeAsync(isValid);
    }

    private bool IsValidPassword(string password)
    {
        // Password validation logic
        return !string.IsNullOrEmpty(password) &&
               password.Length >= 8 &&
               password.Any(char.IsDigit) &&
               password.Any(char.IsLetter);
    }
}
